[{"content":"随笔 今天给新人出面试题的时候，想到自己也可能要跳槽了。也许面临的也是这样的考试还是为自己捏了一把汗。有一段时间沉浸于业务当中导致自己的视野被限制，创新能力的下降。是时候把别的东西捡起来看看了。\n待做列表  更新简历 熟悉 markdown 熟悉 docker compose 熟悉 机器学习 熟悉 golang 基础语法 熟悉 python 图像处理  每日一题算法 实现LFU算法对象\n#!/usr/bin/env python  from collections import deque class LFUCache(object): def __init__(self, num): self.cap = num self.dict = {} self.stack = deque([]) def get(self, key): if key in self.dict: self.stack.append(key) return self.dict[key] return -1 def set(self, key, value): if key not in self.dict and len(self.dict) \u0026gt;= self.cap: pivot = self.stack.popleft() self.dict.pop(pivot) self.dict[key] = value self.stack.append(key) return \u0026#39;\u0026#39; 主要利用了 collections 模块里的 deque 队列，FIFO帮助我们模拟了实际上的队列操作，并且记录下来了整个操作过程\n","permalink":"https://ayaoayao.github.io/posts/2021-04-28/","summary":"随笔 今天给新人出面试题的时候，想到自己也可能要跳槽了。也许面临的也是这样的考试还是为自己捏了一把汗。有一段时间沉浸于业务当中导致自己的视野被限制，创新能力的下降。是时候把别的东西捡起来看看了。\n待做列表  更新简历 熟悉 markdown 熟悉 docker compose 熟悉 机器学习 熟悉 golang 基础语法 熟悉 python 图像处理  每日一题算法 实现LFU算法对象\n#!/usr/bin/env python  from collections import deque class LFUCache(object): def __init__(self, num): self.cap = num self.dict = {} self.stack = deque([]) def get(self, key): if key in self.dict: self.stack.append(key) return self.dict[key] return -1 def set(self, key, value): if key not in self.dict and len(self.dict) \u0026gt;= self.cap: pivot = self.stack.popleft() self.","title":"面试的感悟和每日算法"}]